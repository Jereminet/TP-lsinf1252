QUESTION 1:
-----------

Voir si la zone mémoire est utilisée ou pas, et si oui, on ne doit pas recréer une zone mémoire
s'assurer donc que ca échoue si la mémoire est deja allouée.

QUESTION 2:
-----------

Dans l'appel du fils, on ne reprécise pas le drapeau IPC_CREATE pcq ce processus a été créé précédemment.
S_IRUSR et S_IWUSR sont des flags pour le même utilisateur, qui correspondent à la permission 600 alors que 
celle du fils est de 400. Pour savoir si les demandes de permissions sont correctes, il suffit de faire l'opération
logique bit par bit (*) 600 & 400 = 400. Vu que le résultat équivaut à celui de l'appel demandant, c'est correct.

Le premier appel à shmat demande juste la lecture (soit 400) sur une page en permission 400 (celle du fils), il n'y a donc 
aucun problème.
Pour le suivant, on demande par shmat la permission pour exécuter la partie de mémoire partagée (permission 100) sur une
page en permission 400. Si l'on procède en faisant 400 & 100 on obtient 0. La permission n'est pas similaire
donc l'appel échoue.

(*) : 600       : 110 000 000
    & 400       & 100 000 000
    -----       --------------
      400         100 000 000

QUESTION 1(bis):
----------------

On veut partager l'adresse du malloc et pas son contenu. Entre un père et son fils, cela va marcher
mais entre 2 processus différents, l'adresses virtuelle ne sera pas la même vu que les tables des pages
sont indépendantes.

Les adresses des pointeurs ne sont pas les mêmes.

QUESTION 2(bis):
-----------

Si le stockage en mémoire se fait de manière contigue, il faut prendre l'adresse de départ et y ajouter
n*l'offset pour accéder au n-ième élément. Cela revient quasiment à utiliser un tableau, sans l'aspect
dynamique.

Dans cette procédure, on ne peut donc pas utiliser shmat avec NULL.
