QUESTION 2 :
------------

Premier cas :
	typedef struct{
		float f;
		char[40] c;
	}x;

	x tab[100000000];

        Dans la mémoire, on va avoir une succession de structures, donc une
	alternance de float et de char*.

Deuxieme cas :
	float tab1[100000000];
	char tab2[100000000];

	Dans la mémoire, on va avoir une succession de float PUIS une 
	succession de char*. Cette technique permet donc de profiter du
	principe de localité spatiale, et donc une meilleure performance.

QUESTION 6 :
-----------

1) L'adresse pointée %esp contient la valeur de %eax, soit 0x02
2) L'adresse pointée %esp contient la valeur de %ebx, soit 0x03
3) L'adresse pointée par %esp contient la valeur de %eax, soit 0x02 et %ecx contient l'ancienne 
   valeur de %esp, soit %ebx qui vaut 0x03

Le premier pushl peut être résumé en 2 opérations :
	subl $4,%esp;
	movl %eax,(%esp);
		On met la valeur %eax là où pointe %esp, on ne change pas la valeur
		de %esp
Le popl :
	addl $4,%esp;
	movl (%esp),%ecx;
